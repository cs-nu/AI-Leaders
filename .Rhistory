yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:100000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
for(i in 1:1000000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
for(i in 1:1000000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/100000
print(percent)
yes <- 0
no  <- 0
for(i in 1:1000000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/1000000
print(percent)
for(i in 1:1000000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/1000000
print(percent)
dbinom(84,120,.6)
dbinom(36,120,.4)
yes <- 0
no  <- 0
for(i in 1:1000000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/1000000
print(percent)
yes <- 0
no  <- 0
for(i in 1:1000000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/1000000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,.6)
if(sum(outcome)/120 > .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
for(i in 1:10000) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/10000
print(percent)
yes <- 0
no  <- 0
trials <- 10000
for(i in 1:trials) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/trials
print(percent)
yes <- 0
no  <- 0
trials <- 10000
for(i in 1:trials) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/trials
print(percent)
yes <- 0
no  <- 0
trials <- 10000
for(i in 1:trials) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/trials
print(percent)
yes <- 0
no  <- 0
trials <- 10000
for(i in 1:trials) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
else {
no <- no + 1
}
}
percent <- yes/trials
print(percent)
source("~/Code Files/R/R workshop file.R", echo=TRUE)
# R Workshop File
library(dplyr)
yes <- 0
no  <- 0
trials <- 10000
for(i in 1:trials) {
outcome <- rbinom(120,1,0.6)
if(sum(outcome)/120 >= .7) {
yes <- yes + 1
}
}
percent <- yes/trials
print(percent)
install.packages("tinytex")
tinytex::install_tinytex()
optimize(output, 0, interval = c(0, 10000))
output <- function(batch) {
y = 1/batch + 1 - .91^batch
}
optimize(output, 0, interval = c(0, 10000))
optimize(output, interval = c(0, 10000))
optimize(output, interval = c(0, 10000), maximum = TRUE)
optimize(output, interval = c(0, 10000))
output(2)
print(output(2))
optimize(output, interval = c(0, 10000))
source("~/Code Files/R/R workshop file.R", echo=TRUE)
output(4)
x <- output(4)
x
x <- output(.09, 1000)
output <- function(p, N) {
z <- 1
optimal_size <- 1
for(batch in 1:N){
y <- 1/batch + 1 - (1-p)^batch
if (y < z) {
z <- y
optimal_size <- batch
}
}
return(optimal_size)
}
x <- output(.09, 1000)
x
x <- output(.01, 1000)
print(x)
x <- output(.5, 1000)
print(x)
x <- output(.001, 1000)
print(x)
x <- output(.00001, 1000)
print(x)
output(.2, 10)
output(.4, 10)
output(.3, 10)
output(.35, 10)
output(.36, 10)
output(.34, 10)
output(.32, 10)
output(.33, 10)
output(.31, 10)
output(.30, 10)
output(.305, 10)
output(.309, 10)
output(.306, 10)
output(.307, 10)
output(.306, 10)
output(.3065, 10)
output(.3063, 10)
output(.3062, 10)
output(.305, 10)
output(.306, 10)
output(.307, 10)
output(.3065, 10)
output(.3067, 10)
output(.3066, 10)
library(dplyr)
data <- read.csv('cbd_data.csv')
setwd('\\Users\\timot\\Documents\\Code Files\\R\\AI Leaders')
library(dplyr)
data <- read.csv('cbd_data.csv')
small <- data %>% slice(1:1000)
summary <- data %>% group_by(Gender, Zip.Code) %>% mutate(total_sales = sum(Price)) %>%
ungroup() %>% select(Gender, Zip.Code, total_sales) %>% distinct()
## Revenue
## Lifetime Customer Value
# What does "lifetime" mean e.g. do we want to invest in customers now who are 20 because they might spend a lot when they're 80
# Do we care more revenue or profit at this stage
# Do we have data over a longer time horizon that allows us to track behavior over time
## Demand by Plant Type
# Based on the products in the data, what is the best way to identify which ones use consistent plants across product types?
## Quickly identify model breakdowns (and why)
# What constitutes an "Anomaly"
## Correlate customer value with ad target-able metrics
# What metrics are useful when targeting ads?
## What links have been seen in the past between medical data and recreational data?
## Business Questions:
# Which KPI is most important?
# Are there metrics other than the KPI which we must ensure are not negatively impacted?
# How receptive to change are those at the client and what institutional barriers exist?
# What are the key stakeholders in the business segments that may be impacted by AI driven changes?
# How well positioned is the company to change policy/procedure if optimizations are identified?
# Which process are flexible, and which are fully immutable?
View(small)
summary <- data %>% group_by(Gender, Zip.Code, Age) %>% mutate(avg_sales = mean(Price)) %>%
ungroup() %>% select(Gender, Zip.Code, Age, avg_sales) %>% distinct()
View(summary)
cust_summary <- data %>% group_by(Patient.ID) %>% mutate(sales = sum(Price), transactions = count()) %>%
ungroup() %>% distinct() %>% select(Patient.ID, Gender, Zip,Code, Age, sales, transactions)
cust_summary <- data %>% group_by(Patient.ID) %>%
mutate(trans_id = row_number(), sales = sum(Price), transactions = count(trans_id)) %>%
ungroup() %>% distinct() %>% select(Patient.ID, Gender, Zip,Code, Age, sales, transactions)
cust_summary <- data %>% group_by(Patient.ID) %>%
mutate(trans_id = row_number(), sales = sum(Price)) %>%
ungroup() %>% distinct() %>% select(Patient.ID, Gender, Zip,Code, Age, sales)
cust_summary <- data %>% group_by(Patient.ID) %>%
mutate(trans_id = row_number(), sales = sum(Price)) %>%
ungroup() %>% distinct() %>% select(Patient.ID, Gender, Zip.Code, Age, sales)
View(cust_summary)
cust_summary <- data %>% group_by(Patient.ID) %>%
mutate(trans_id = row_number(), sales = sum(Price)) %>%
ungroup() %>% select(Patient.ID, Gender, Zip.Code, Age, sales) %>% distinct()
View(cust_summary)
summary <- cust_summary %>% group_by(Gender, Zip.Code, Age) %>%
mutate(avg_sales = mean(Price), num_customers = count(Patient.ID)) %>%
ungroup() %>% select(Gender, Zip.Code, Age, avg_sales) %>% distinct()
summary <- cust_summary %>% group_by(Gender, Zip.Code, Age) %>%
mutate(avg_sales = mean(sales), num_customers = count(Patient.ID)) %>%
ungroup() %>% select(Gender, Zip.Code, Age, avg_sales) %>% distinct()
summary <- cust_summary %>% group_by(Gender, Zip.Code, Age) %>%
mutate(avg_sales = mean(sales), num_customers = tally(Patient.ID)) %>%
ungroup() %>% select(Gender, Zip.Code, Age, avg_sales) %>% distinct()
cust_summary <- data %>% group_by(Patient.ID) %>%
mutate(trans_id = row_number(), sales = sum(Price), num_trans = n()) %>%
ungroup() %>% select(Patient.ID, Gender, Zip.Code, Age, sales) %>% distinct()
summary <- cust_summary %>% group_by(Gender, Zip.Code, Age) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(Gender, Zip.Code, Age, avg_sales, num_customers, total_trans) %>% distinct()
cust_summary <- data %>% group_by(Patient.ID) %>%
mutate(trans_id = row_number(), sales = sum(Price), num_trans = n()) %>%
ungroup() %>% select(Patient.ID, Gender, Zip.Code, Age, sales, num_trans) %>% distinct()
summary <- cust_summary %>% group_by(Gender, Zip.Code, Age) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(Gender, Zip.Code, Age, avg_sales, num_customers, total_trans) %>% distinct()
View(summary)
summary <- cust_summary %>% group_by(Gender, Age) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(Gender, Age, avg_sales, num_customers, total_trans) %>% distinct()
View(summary)
summary <- cust_summary %>% group_by(Age) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(Age, avg_sales, num_customers, total_trans) %>% distinct()
View(summary)
broad_summary <- cust_summary %>% mutate(age_group = case_when(age < 21 ~ 'infant',
age < 25 ~ 'college',
age < 30 ~ 'youngish',
age < 40 ~ 'middle-age',
age < 50 ~ 'parents',
age < 65 ~ 'old professionals',
age < 80 ~ 'retirees',
TRUE ~ 'Skeletons')) %>% group_by(age_group) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(Age, avg_sales, num_customers, total_trans) %>% distinct()
broad_summary <- cust_summary %>% mutate(age_group = case_when(Age < 21 ~ 'infant',
Age < 25 ~ 'college',
Age < 30 ~ 'youngish',
Age < 40 ~ 'middle-age',
Age < 50 ~ 'parents',
Age < 65 ~ 'old professionals',
Age < 80 ~ 'retirees',
TRUE ~ 'Skeletons')) %>% group_by(age_group) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(Age, avg_sales, num_customers, total_trans) %>% distinct()
View(broad_summary)
broad_summary <- cust_summary %>% mutate(age_group = case_when(Age < 21 ~ 'infant',
Age < 25 ~ 'college',
Age < 30 ~ 'youngish',
Age < 40 ~ 'middle-age',
Age < 50 ~ 'parents',
Age < 65 ~ 'old professionals',
Age < 80 ~ 'retirees',
TRUE ~ 'Skeletons')) %>% group_by(age_group) %>%
mutate(avg_sales = mean(sales), num_customers = n(), total_trans = sum(num_trans)) %>%
ungroup() %>% select(age_group, avg_sales, num_customers, total_trans) %>% distinct()
View(broad_summary)
